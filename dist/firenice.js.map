{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/animsprite.js","webpack:///./src/constants.js","webpack:///./src/engine.js","webpack:///./src/fire.js","webpack:///./src/firenice.js","webpack:///./src/game.js","webpack:///./src/ice.js","webpack:///./src/keyboard.js","webpack:///./src/levels.js","webpack:///./src/player.js","webpack:///./src/resources.js","webpack:///./src/scene.js","webpack:///./src/sfx.js","webpack:///./src/sound.js","webpack:///./src/sprite.js","webpack:///./src/struct.js","webpack:///./src/tilemap.js","webpack:///./src/tiles.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAkC;AACI;;AAE/B,yBAAyB,8CAAM;AACtC;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAM;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,sDAAsD,iDAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACN;AACA;AACJ;AACG;AACO;AACtC;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAM;AAC3B;AACA;AACA;AACA;AACA,4BAA4B,kDAAQ;AACpC,yBAAyB,4CAAK;AAC9B,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;AACA,kEAAkE,iDAAM;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD,0DAA0D,iDAAM;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD,uCAAuC,iDAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAG;AACrC,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,wCAAG;AAC9B;AACA;AACA;;AAEA;AACA,uBAAuB,yBAAyB;AAChD,uCAAuC,iDAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA,wCAAwC,iDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,2CAAM;AACjC;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,iDAAM;AAC/D;AACA,mBAAmB,iDAAM;AACzB;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,iDAAM;AACrB;;AAEA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9NA;AAAA;AAAA;AAAA;AAA0C;AACJ;;AAE/B,mBAAmB,sDAAU;;AAEpC;AACA,cAAc,iDAAM;AACpB,oBAAoB,iDAAM,aAAa,iDAAM;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA;AACA;;AAEA;AACA,6DAA6D,iDAAM,kBAAkB,iDAAM;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,iDAAM,kBAAkB,iDAAM;AAC3F;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0BAA0B,iDAAM;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,iDAAM;AAClC;AACA,SAAS;AACT,0BAA0B,iDAAM;AAChC;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAA8B;AACU;;AAExC;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,0CAAI;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,E;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAkC;AACQ;AACJ;;AAEtC;AACA;AACA;AACO;AACP;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,qBAAqB,iDAAM;AAC3B,0BAA0B,8CAAM;AAChC;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,sDAAU;AACnC,yBAAyB,sDAAU;AACnC,+BAA+B,iDAAM;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,iDAAM;AAC/B;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACI;AACX;;AAExB,kBAAkB,sDAAU;;AAEnC;AACA,cAAc,iDAAM;AACpB,oBAAoB,iDAAM,aAAa,iDAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mEAAmE,iDAAM;AACzE,mEAAmE,iDAAM;AACzE,wCAAwC,iDAAM;AAC9C,wCAAwC,iDAAM;AAC9C,yCAAyC,iDAAM;AAC/C,yCAAyC,iDAAM;AAC/C;AACA;AACA;AACA;AACA,8BAA8B,iDAAM;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB,iDAAM;AAC5B;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iDAAM,cAAc,2CAAI;AAC5C;AACA;AACA,oBAAoB,iDAAM,cAAc,2CAAI;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,iDAAM;AAChC;AACA;AACA;AACA;AACA;AACA;A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ACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAM,kBAAkB,iDAAM,2CAA2C,iDAAM,aAAa,iDAAM,kBAAkB,iDAAM;AACnJ,0BAA0B,iDAAM;AAChC;AACA;;AAEA;AACA;AACA,4BAA4B,iDAAM;AAClC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAM;AAChC;AACA;;AAEA;AACA;AACA,+BAA+B,iDAAM;AACrC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4BAA4B,iDAAM;AAClC,0BAA0B,iDAAM;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAM;AAClC,0BAA0B,iDAAM;AAChC;AACA;;AAEA;AACA,6DAA6D,iDAAM,oBAAoB,iDAAM;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,iDAAM;AACjC;AACA;AACA,2BAA2B,iDAAM;AACjC;AACA;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA,iBAAiB,iDAAM;AACvB;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACjbA;AAAA;AAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACF;AACF;AACN;AACE;AACI;;AAE3B;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAM;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA,mBAAmB,8CAAM;AACzB;AACA;AACA;AACA,sBAAsB,8CAAM;AAC5B;AACA,8BAA8B,gDAAO;AACrC;AACA;AACA,qBAAqB,iDAAM;AAC3B,6CAA6C,8CAAM;AACnD;AACA;AACA,qBAAqB,iDAAM;AAC3B;AACA,8CAA8C,wCAAG;AACjD;AACA,qBAAqB,iDAAM;AAC3B;AACA;AACA,qBAAqB,iDAAM;AAC3B,8CAA8C,0CAAI;AAClD;AACA,qBAAqB,iDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAkC;AACI;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,qBAAqB,8CAAM;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,iEAAiE,iDAAM,mBAAmB,iDAAM;AAChG;AACA;;AAEA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrEA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,C;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAsC;AACF;;AAE7B;AACP;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,4BAA4B,gDAAQ;AACpC;AACA;AACA;AACA;AACA,qBAAqB,iDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAM;AACpC,8BAA8B,iDAAM;AACpC;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yCAAyC,iDAAM;AAC/C,yCAAyC,iDAAM;AAC/C;AACA;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAsC;;AAE/B;AACP;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAM;AAC/B,0BAA0B,iDAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,mBAAmB,iDAAM;AACzB;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC,2BAA2B,kBAAkB;AAC7C,+BAA+B,iDAAM;AACrC;AACA;AACA,mCAAmC,iDAAM;AACzC,qBAAqB;AACrB,mCAAmC,iDAAM;AACzC,qBAAqB;AACrB,mCAAmC,iDAAM;AACzC,qBAAqB;AACrB,mCAAmC,iDAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAsC;;AAE/B;AACP;AACA,SAAS,iDAAM;AACf;AACA,SAAS;AACT,SAAS,iDAAM;AACf;AACA,SAAS;AACT,SAAS,iDAAM;AACf;AACA,SAAS;AACT,SAAS,iDAAM;AACf;AACA,SAAS;AACT,SAAS,iDAAM;AACf;AACA,SAAS;AACT,SAAS,iDAAM;AACf;AACA,SAAS;AACT,SAAS,iDAAM;AACf;AACA,SAAS;AACT,SAAS,iDAAM;AACf;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA","file":"firenice.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/firenice.js\");\n","import { Sprite } from './sprite';\r\nimport { Consts }  from './constants';\r\n\r\nexport class AnimSprite extends Sprite {\r\n    /**\r\n     * Animated Sprite, inherts from Sprite.\r\n     * Adds drawing of pictures in the body of sprite\r\n     * @param {object} engine    Engine Engine\r\n     * @param {object} image   Dom image object (img src=)\r\n     * @param {number} tx      Tile X position\r\n     * @param {number} ty      Tile Y position\r\n     * @param {number} width   Width of the sprite\r\n     * @param {number} height  Height of the sprite\r\n     * @param {number} offsetX Offset X of drawing the picture into the canvas\r\n     * @param {number} offsetY Offset Y of drawing the picture into the canvas\r\n     * @param {number} start   Animation frame start\r\n     * @param {number} end     Animation frame end\r\n     * @param {boolean} loop   Repeat animation\r\n     */\r\n    constructor (id, engine, image, tx, ty, width, height, offsetX, offsetY, start, end, loop) {\r\n        super(id, engine, tx, ty, width, height);\r\n        this.image = this.engine.resources.get(image);\r\n        this.animLoop = loop;\r\n        this.animStart = start;\r\n        this.animEnd = end;\r\n        this.animCount = 0;\r\n        this.animDelay = Consts.ANIM_STANDARD_DELAY;\r\n        this.animDelayCount = 0;\r\n        this.animRow = 0;\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n    }\r\n\r\n    /**\r\n     * Sets the sprite animation frames\r\n     * @param {number} start Start frame of the animation\r\n     * @param {number} end   End frame of the animation\r\n     * @param {boolean} loop  If true, animation will loop\r\n     * @param {number} row   Row of the frames in the sprite image\r\n     * @param {number} delay Delay between each frame\r\n     * @param {boolean} once  Sets all the new values only one time.\r\n     */\r\n    setAnim(start, end, loop, row, delay, once) {\r\n        let _once = (typeof once === 'undefined') ? false : once;\r\n        let _delay = (typeof delay === 'undefined') ? Consts.ANIM_STANDARD_DELAY : delay;\r\n        let _row = (typeof row === 'undefined') ? this.animRow : row;\r\n        if (!_once) {\r\n            this.animStart = start;\r\n            this.animEnd = end;\r\n            this.animCount = start;\r\n            this.animLoop = loop;\r\n            this.animDelay = _delay;\r\n            this.animRow = _row;\r\n        } else {\r\n            if (this.animStart !== start || this.animEnd !== end ||\r\n                this.animLoop !== loop || this.animRow !== _row)\r\n            {\r\n                this.animStart = start;\r\n                this.animEnd = end;\r\n                this.animCount = start;\r\n                this.animLoop = loop;\r\n                this.animDelay = _delay;\r\n                this.animRow = _row;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Draws the frame of the sprite in the canvas\r\n     */\r\n    draw() {\r\n        this.ctx.save();\r\n        this.ctx.drawImage(this.image, this.animCount*this.width,\r\n            this.animRow * this.height, this.width, this.height,\r\n            this.x+this.offsetX, this.y+this.offsetY,\r\n            this.width, this.height);\r\n        if (this.animDelayCount++ > this.animDelay) {\r\n            if (++this.animCount > this.animEnd) {\r\n                if (this.animLoop) {\r\n                    this.animCount = this.animStart;\r\n                } else {\r\n                    this.animCount = this.animEnd;\r\n                }\r\n            }\r\n            this.animDelayCount = 0;\r\n        }\r\n        this.ctx.restore();\r\n    }\r\n}\r\n","export const Consts = {\r\n    TILE_WIDTH: 32,\r\n    MOVE_STAND: 0,\r\n    MOVE_LEFT: 1,\r\n    MOVE_RIGHT: 2,\r\n    MOVE_DOWN: 3,\r\n    MOVE_UP: 4,\r\n    MOVE_TURN: 5,\r\n    MOVE_ICE_MAKE: 6,\r\n    MOVE_ICE_REMOVE: 7,\r\n    MOVE_ICE_MOVING: 8,\r\n    MOVE_ICE_CHECK: 9,\r\n    MOVE_RIP: 10,\r\n    MOVE_PUSH: 8,\r\n    MOVE_ICE_FAIL: 11,\r\n    MOVE_OUTRO: 12,\r\n    MOVE_INTRO: 13,\r\n    DIR_LEFT: -1,\r\n    DIR_RIGHT: 1,\r\n    ANIM_STANDARD_DELAY: 2,\r\n    ANIM_FRAME_COUNT: 16,\r\n    ANIM_LEFT_ROW: 1,\r\n    ANIM_RIGHT_ROW: 0,\r\n    ANIM_RUN_START: 0,\r\n    ANIM_RUN_END: 3,\r\n    ANIM_STAND: 4,\r\n    ANIM_TURN_START: 4,\r\n    ANIM_TURN_END: 7,\r\n    ANIM_FALL_START: 8,\r\n    ANIM_FALL_END: 9,\r\n    ANIM_BIG_FALL_START: 10,\r\n    ANIM_BIG_FALL_END: 11,\r\n    ANIM_PUSH_START: 12,\r\n    ANIM_PUSH_END: 13,\r\n    ANIM_JUMP_START: 14,\r\n    ANIM_JUMP_END: 15,\r\n    ANIM_STAND_START: 16,\r\n    ANIM_STAND_END: 17,\r\n    ANIM_ICE_START: 18,\r\n    ANIM_ICE_END: 19,\r\n    ANIM_CROUCH_START: 20,\r\n    ANIM_CROUCH_END: 22,\r\n    ANIM_RIP_START: 23,\r\n    ANIM_RIP_END: 24,\r\n    ANIM_SLEEP_START: 25,\r\n    ANIM_SLEEP_END: 26,\r\n    TILE_BACKGROUND: 0,\r\n    TILE_BOTH: 32,\r\n    TILE_LEFT: 64,\r\n    TILE_MIDDLE: 96,\r\n    TILE_RIGHT: 128,\r\n    OBJECT_OUT: -1,\r\n    OBJECT_BACKGROUND: 0,\r\n    OBJECT_WALL: 1,\r\n    OBJECT_ICE: 3,\r\n    OBJECT_METAL: 4,\r\n    OBJECT_JAR: 5,\r\n    OBJECT_FIRE: 6,\r\n    OBJECT_PLAYER: 7,\r\n    GAME_STATE_PLAY: 1,\r\n    GAME_STATE_INTRO: 2\r\n};\r\n","import { Keyboard } from './keyboard';\r\nimport { Sound } from './sound';\r\nimport { Scene } from './scene';\r\nimport { Ice } from './ice';\r\nimport { Sparks } from './sfx';\r\nimport { Consts }  from './constants';\r\n/**\r\n * Engine Loop\r\n */\r\nexport class Engine {\r\n\r\n    constructor(canvas, resources) {\r\n        this.canvas = canvas;\r\n        this.cwidth = canvas.width;\r\n        this.cheight = canvas.height;\r\n        this.resources = resources;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.state = Consts.GAME_STATE_INTRO;\r\n        this.sprites = [];\r\n        this.sfxs = [];\r\n        this.player = {};\r\n        this.level = 0;\r\n        this.keyboard = new Keyboard();\r\n        this.sound = new Sound();\r\n        this.scene = new Scene(this);\r\n        this.editor = false;\r\n        this.noSpriteMoveCount = 0;\r\n        const level = localStorage.getItem('level');\r\n        if (level !== null) {\r\n            this.level = parseInt(level, 10);\r\n        }\r\n        this.scene.load(this.level);\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.clearRect(0,0,this.cwidth,this.cheight);\r\n        this.map.draw();\r\n        // reverse loop, player draws last\r\n        for (let i = this.sprites.length - 1; i >= 0; i--) {\r\n            this.sprites[i].draw();\r\n        }\r\n        for (let i = 0; i < this.sfxs.length; ++i) {\r\n            this.sfxs[i].draw();\r\n        }\r\n    }\r\n\r\n    collision() {\r\n        const fires = this.sprites.filter(sprite => sprite.id === Consts.OBJECT_FIRE);\r\n        if (!fires.length && !this.editor && this.player.state !== MOVE_OUTRO) {\r\n            this.player.outro();\r\n        }\r\n    }\r\n\r\n    nextLevel() {\r\n        this.level++;\r\n        localStorage.setItem('level', this.level);\r\n        this.scene.load(this.level);\r\n    }\r\n\r\n    move() {\r\n        for (let i = 0; i < this.sprites.length; ++i) {\r\n            this.sprites[i].engineMove();\r\n        }\r\n        for (let i = 0; i < this.sfxs.length; ++i) {\r\n            this.sfxs[i].engineMove();\r\n        }\r\n        let spritesMoving = false;\r\n        for (let i = 0; i < this.sprites.length; ++i) {\r\n            if (this.sprites[i] && this.sprites[i].id !== Consts.OBJECT_PLAYER && this.sprites[i].moving) {\r\n                spritesMoving = true;\r\n            }\r\n        }\r\n        if (!spritesMoving) {\r\n            this.noSpriteMoveCount += 1;\r\n        } else {\r\n            this.noSpriteMoveCount = 0;\r\n        }\r\n        // check if no sprites have moved for 2 turns\r\n        if (!spritesMoving && this.noSpriteMoveCount > 1) {\r\n            this.noSpriteMoveCount = 0;\r\n            if (this.keyboard.up) {\r\n                //this.player.jump();\r\n            }\r\n            if (this.keyboard.down || this.keyboard.action) {\r\n                this.player.ice();\r\n            }\r\n            if (this.keyboard.left) {\r\n                this.player.left();\r\n            }\r\n            if (this.keyboard.right) {\r\n                this.player.right();\r\n            }\r\n            if (this.keyboard.enter) {\r\n                this.sound.stop('danger');\r\n                this.scene.load(this.level);\r\n                this.keyboard.enter = false;\r\n            }\r\n        }\r\n        this.collision();\r\n    }\r\n\r\n    iceAt(tx, ty) {\r\n        for (let i = 0; i < this.sprites.length; i++) {\r\n            if (this.sprites[i].isSpriteAt(tx, ty)) {\r\n                return this.sprites[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addIceBlock(tx, ty, frozen) {\r\n        let foundIceBlocks = [ ];\r\n        frozen = (typeof length === 'undefined') ? false : frozen;\r\n        for (let i = 0; i < this.sprites.length; i++) {\r\n            if (this.sprites[i].id === Consts.OBJECT_ICE && this.sprites[i].ytile === ty) {\r\n                let ice = this.sprites[i];\r\n                if (ice.xtile - 1 === tx || ice.xtile + ice.length === tx) {\r\n                    foundIceBlocks.push(ice);\r\n                }\r\n            }\r\n        }\r\n        if (foundIceBlocks.length === 0) {\r\n            this.sprites.push(new Ice(this, tx, ty, 1, frozen));\r\n        } else if (foundIceBlocks.length === 1) {\r\n            foundIceBlocks[0].addBlock(tx);\r\n        } else {\r\n            this.joinIceBlocks(foundIceBlocks[0], foundIceBlocks[1]);\r\n        }\r\n    }\r\n\r\n    joinIceBlocks(iceblockA,iceblockB) {\r\n        let tx = iceblockA.xtile <= iceblockB.xtile ? iceblockA.xtile : iceblockB.xtile;\r\n        let ty = iceblockA.ytile;\r\n        let length = iceblockA.length + iceblockB.length + 1;\r\n        this.addSprite(new Ice(this, tx, ty, length));\r\n        this.removeSprite(iceblockA);\r\n        this.removeSprite(iceblockB);\r\n    }\r\n\r\n    removeIceBlock(tx, ty) {\r\n        for (let i = 0; i < this.sprites.length; i++) {\r\n            if (this.sprites[i].id === Consts.OBJECT_ICE &&\r\n                this.sprites[i].ytile === ty &&\r\n                tx >= this.sprites[i].xtile &&\r\n                tx < this.sprites[i].xtile + this.sprites[i].length)\r\n            {\r\n                if (this.sprites[i].removeBlock(tx) <= 0) {\r\n                    this.sprites.splice(i,1);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeFire(tx, ty) {\r\n        for (let i = 0; i < this.sprites.length; i++) {\r\n            if (\r\n                (this.sprites[i].ytile === ty) &&\r\n                (tx === this.sprites[i].xtile) &&\r\n                (this.sprites[i].id === Consts.OBJECT_FIRE)\r\n            ) {\r\n                this.sprites.splice(i,1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    addSprite(sprite) {\r\n        this.sprites.push(sprite);\r\n    }\r\n\r\n    removeSprite(sprite) {\r\n        for (let i = 0; i < this.sprites.length; i++) {\r\n            if (this.sprites[i] === sprite) {\r\n                this.sprites.splice(i,1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addSparks(xtile, ytile, color, quantity, intensity) {\r\n        this.sfxs.push(new Sparks(this, xtile, ytile, color, quantity, intensity));\r\n    }\r\n\r\n    removeSfx(sprite) {\r\n        for (let i = 0; i < this.sfxs.length; i++) {\r\n            if (this.sfxs[i] === sprite) {\r\n                this.sfxs.splice(i,1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    spriteTypeAt(tx, ty, excludeId) {\r\n        excludeId = (typeof excludeId === 'undefined') ? Consts.OBJECT_OUT : excludeId;\r\n        if (tx < 0 || ty < 0 || tx > this.map.width || ty > this.map.height) {\r\n            return Consts.OBJECT_OUT;\r\n        }\r\n        if (!this.map.map[ty][tx]) {\r\n            for (let i = 0; i < this.sprites.length; i++) {\r\n                if (this.sprites[i].isSpriteAt(tx, ty) && this.sprites[i].id !== excludeId) {\r\n                    return this.sprites[i].id;\r\n                }\r\n            }\r\n        } else {\r\n            return this.map.map[ty][tx];\r\n        }\r\n        return Consts.OBJECT_BACKGROUND;\r\n    }\r\n\r\n    spriteAt(tx, ty) {\r\n        if (!this.map.map[ty][tx]) {\r\n            for (let i = 0; i < this.sprites.length; i++) {\r\n                if (this.sprites[i].isSpriteAt(tx, ty)) {\r\n                    return this.sprites[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { AnimSprite } from './animsprite';\r\nimport { Consts }  from './constants';\r\n\r\nexport class Fire extends AnimSprite {\r\n\r\n    constructor(engine, tx, ty) {\r\n        super(Consts.OBJECT_FIRE, engine, 'img_fire',\r\n            tx, ty, Consts.TILE_WIDTH, Consts.TILE_WIDTH, 0, 0, 0, 3, true);\r\n    }\r\n\r\n    move() {\r\n        if (!this.moving) {\r\n            this.collisions();\r\n            this.gravity();\r\n        }\r\n        switch (this.state) {\r\n            case Consts.MOVE_DOWN:\r\n                this.doDown();\r\n                break;\r\n        }\r\n    }\r\n\r\n    collisions() {\r\n        if (this.engine.spriteTypeAt(this.xtile, this.ytile, Consts.OBJECT_FIRE) === Consts.OBJECT_ICE) {\r\n            this.engine.sound.play('fire-off');\r\n            this.engine.removeFire(this.xtile, this.ytile);\r\n            this.engine.removeIceBlock(this.xtile, this.ytile);\r\n            this.engine.addSparks(this.xtile, this.ytile, '255, 126, 198', 15, 0.5);\r\n            this.engine.addSparks(this.xtile, this.ytile, '124, 212, 255', 10);\r\n        }\r\n        if (this.engine.spriteTypeAt(this.xtile, this.ytile, Consts.OBJECT_FIRE) === Consts.OBJECT_METAL) {\r\n            this.engine.sound.play('fire-off');\r\n            this.engine.removeFire(this.xtile, this.ytile);\r\n            this.engine.addSparks(this.xtile, this.ytile, '255, 126, 198', 15, 0.5);\r\n        }\r\n\r\n    }\r\n\r\n    gravity() {\r\n        if (!this.coorners.d) {\r\n            this.setState(Consts.MOVE_DOWN, true);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    doDown() {\r\n        this.counter += 4;\r\n        if (this.counter <= Consts.TILE_WIDTH) {\r\n            this.y += 4;\r\n        } else {\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n}\r\n","import { Game } from './game';\r\nimport { Resources } from './resources';\r\n\r\nwindow.addEventListener('load', () => {\r\n    const resources = new Resources();\r\n    resources.add('tilemap', document.getElementById('img_tilemap'));\r\n    resources.add('img_ice', document.getElementById('img_ice'));\r\n    resources.add('img_jar', document.getElementById('img_jar'));\r\n    resources.add('img_fire', document.getElementById('img_fire'));\r\n    resources.add('img_dona', document.getElementById('img_dona'));\r\n    resources.add('img_intro', document.getElementById('img_intro'));\r\n    resources.add('img_start', document.getElementById('img_start'));\r\n    resources.add('img_metal', document.getElementById('img_metal'));\r\n    resources.add('frost', document.getElementById('img_frozen'));\r\n\r\n    const canvas = document.getElementById('canvas');\r\n    const game = new Game(canvas, resources);\r\n    window.game = game;\r\n\r\n    document.getElementById('level-selector').addEventListener('change', (e) => {\r\n        if (e.target.value !== '-1') {\r\n            game.engine.level = parseInt(e.target.value, 10);\r\n            game.engine.scene.load(game.engine.level);\r\n            e.target.blur();\r\n        }\r\n    });\r\n});","import { Engine } from './engine';\r\nimport { AnimSprite } from './animsprite';\r\nimport { Consts }  from './constants';\r\n\r\n/**\r\n * Game Loop\r\n */\r\nexport class Game {\r\n    /**\r\n     * @param {*} canvavs   The canvas element\r\n     * @param {*} resources  Game resources\r\n     */\r\n    constructor(canvas, resources) {\r\n        this.state = Consts.GAME_STATE_INTRO;\r\n        this.engine = new Engine(canvas, resources);\r\n        this.createIntro();\r\n        this.gameloop = this.gameloop_.bind(this); // jshint ignore:line\r\n        this.gameloop();\r\n    }\r\n\r\n    gameloop_() {\r\n        switch (this.state) {\r\n            case Consts.GAME_STATE_INTRO:\r\n                this.doIntro();\r\n                break;\r\n            case Consts.GAME_STATE_PLAY:\r\n                this.engine.draw();\r\n                this.engine.move();\r\n                break;\r\n        }\r\n        window.requestAnimationFrame(this.gameloop);\r\n    }\r\n\r\n    createIntro() {\r\n        this.intro = new AnimSprite(null, this.engine, 'img_intro', 0, 0, 544, 416, 0, 0, 0, 0, false);\r\n        this.start = new AnimSprite(null, this.engine, 'img_start', 7, 11, 140, 26, -10, 0, 0, 1, true);\r\n        this.start.animDelay = Consts.ANIM_STANDARD_DELAY * 20;\r\n    }\r\n\r\n    doIntro() {\r\n        this.intro.draw();\r\n        this.start.draw();\r\n\r\n        if (this.engine.keyboard.enter) {\r\n            this.state = Consts.GAME_STATE_PLAY;\r\n            this.engine.sound.soundrack();\r\n        }\r\n    }\r\n}\r\n","import { Consts }  from './constants';\r\nimport { AnimSprite } from './animsprite';\r\nimport { Tile } from './tiles';\r\n\r\nexport class Ice extends AnimSprite {\r\n\r\n    constructor(engine, tx, ty, length, frozen) {\r\n        super(Consts.OBJECT_ICE, engine, 'img_ice',\r\n            tx, ty, Consts.TILE_WIDTH, Consts.TILE_WIDTH, 0, 0, 0, 1, true);\r\n        this.xtile = tx;\r\n        this.ytile = ty;\r\n        this.frozen = (typeof frozen === 'undefined') ? false : frozen;\r\n        this.length = length;\r\n        this.animEnd = 1;\r\n        this.animDelay = 9;\r\n        this.animRow = 0;\r\n        this.dirrection = 0;\r\n        this.falling = false;\r\n        this.checkFreeze();\r\n    }\r\n\r\n    addBlock(tx) {\r\n        const spriteTypeAtLeftCorner = this.engine.spriteTypeAt(this.xtile-1, this.ytile);\r\n        const spriteTypeAtRightCorner = this.engine.spriteTypeAt(this.xtile+this.length, this.ytile);\r\n        if (\r\n            (tx > this.xtile && this.getTile(tx+1, this.ytile) === Consts.OBJECT_WALL) ||\r\n            (tx < this.xtile && this.getTile(tx-1, this.ytile) === Consts.OBJECT_WALL) ||\r\n            (spriteTypeAtLeftCorner === Consts.OBJECT_METAL) ||\r\n            (spriteTypeAtLeftCorner === Consts.OBJECT_JAR) ||\r\n            (spriteTypeAtRightCorner === Consts.OBJECT_METAL) ||\r\n            (spriteTypeAtRightCorner === Consts.OBJECT_JAR)\r\n        ) {\r\n            this.frozen = true;\r\n        }\r\n        this.xtile = tx < this.xtile ? tx : this.xtile;\r\n        this.x = this.xtile * Consts.TILE_WIDTH;\r\n        this.length++;\r\n    }\r\n\r\n    isSpriteAt(tx, ty) {\r\n        if (this.ytile === ty) {\r\n            if (tx >= this.xtile && tx < (this.xtile + this.length)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    removeBlock(tx) {\r\n        if (tx === this.xtile) {\r\n            this.xtile += 1;\r\n            this.x += Consts.TILE_WIDTH;\r\n            this.length--;\r\n        } else if (tx === this.xtile+this.length-1) {\r\n            this.length--;\r\n        } else {\r\n            this.engine.addSprite(\r\n                new Ice(this.engine, tx+1, this.ytile, this.xtile+this.length-tx-1));\r\n            this.length = tx - this.xtile;\r\n        }\r\n        return this.length;\r\n    }\r\n\r\n    canGlide(dir) {\r\n        if (this.length !== 1 || this.frozen) {\r\n            return false;\r\n        }\r\n        if (dir === Consts.DIR_LEFT  && Tile.isSolid(this.coorners.l)) {\r\n            return false;\r\n        }\r\n        if (dir === Consts.DIR_RIGHT && Tile.isSolid(this.coorners.r)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    gravity() {\r\n        if (!this.coorners.d && !this.frozen) {\r\n            this.falling = true;\r\n            this.setState(Consts.MOVE_DOWN, true);\r\n            return true;\r\n        }\r\n        if (this.falling) {\r\n            this.falling = false;\r\n            this.engine.sound.play('ice-collision');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    collision() {\r\n        if (!this.canGlide(this.dirrection)) {\r\n            this.dirrection = 0;\r\n            this.engine.sound.play('ice-collision');\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    move() {\r\n        for (let i = 0; i < this.length; i++) {\r\n            let tile_down = this.spriteTypeAt(this.xtile+i, this.ytile+1);\r\n            if (tile_down && tile_down !== Consts.OBJECT_FIRE) {\r\n                this.coorners.d = tile_down;\r\n            }\r\n\r\n        }\r\n        if (this.coorners.d === Consts.OBJECT_FIRE) {\r\n            this.coorners.d = Consts.OBJECT_BACKGROUND;\r\n        }\r\n        this.coorners.r = this.spriteTypeAt(this.xtile+this.length, this.ytile);\r\n\r\n        if (this.frozen) {\r\n            this.checkUnfreeze();\r\n        }\r\n        if (!this.moving) {\r\n            this.gravity();\r\n        }\r\n        switch (this.state) {\r\n            case Consts.MOVE_ICE_MOVING:\r\n                this.glide();\r\n                break;\r\n            case Consts.MOVE_ICE_CHECK:\r\n                this.push();\r\n                break;\r\n            case Consts.MOVE_DOWN:\r\n                this.doDown();\r\n                break;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        const spriteTypeAtLeftCorner = this.engine.spriteTypeAt(this.xtile-1, this.ytile);\r\n        const spriteTypeAtRightCorner = this.engine.spriteTypeAt(this.xtile+this.length, this.ytile);\r\n        this.ctx.save();\r\n        if (this.animDelayCount++ > this.animDelay) {\r\n            this.animDelayCount = 0;\r\n            this.animRow = this.animRow === 0 ? 1 : 0;\r\n        }\r\n        if (this.length === 1) {\r\n            this.ctx.drawImage(this.image, 0, Consts.TILE_WIDTH*this.animRow, this.width, this.height,  this.x, this.y, this.width, this.height);\r\n        } else if (this.length === 2) {\r\n            this.ctx.drawImage(this.image, 1*Consts.TILE_WIDTH, Consts.TILE_WIDTH*this.animRow,\r\n                this.width, this.height,  this.x, this.y, this.width, this.height);\r\n            this.ctx.drawImage(this.image, 3*Consts.TILE_WIDTH, Consts.TILE_WIDTH*this.animRow,\r\n                this.width, this.height,  this.x+Consts.TILE_WIDTH, this.y, this.width, this.height);\r\n        } else {\r\n            this.ctx.drawImage(this.image, 1*Consts.TILE_WIDTH, Consts.TILE_WIDTH*this.animRow,\r\n                this.width, this.height,  this.x, this.y, this.width, this.height);\r\n            this.ctx.drawImage(this.image, 3*Consts.TILE_WIDTH, Consts.TILE_WIDTH*this.animRow,\r\n                this.width, this.height,  this.x+Consts.TILE_WIDTH*(this.length-1), this.y, this.width, this.height);\r\n            for (let i = 1;  i < this.length-1; i++) {\r\n                this.ctx.drawImage(this.image, 2*Consts.TILE_WIDTH, Consts.TILE_WIDTH*this.animRow,\r\n                    this.width, this.height,  this.x+(Consts.TILE_WIDTH*i), this.y, this.width, this.height);\r\n            }\r\n        }\r\n        if (this.frozen) {\r\n            if (\r\n                this.getTile(this.xtile-1, this.ytile) === Consts.OBJECT_WALL ||\r\n                spriteTypeAtLeftCorner === Consts.OBJECT_METAL ||\r\n                spriteTypeAtLeftCorner === Consts.OBJECT_JAR\r\n            ) {\r\n                this.ctx.drawImage(\r\n                    this.engine.resources.get('frost'),\r\n                    (this.xtile*this.width)-7,\r\n                    this.ytile*this.height\r\n                );\r\n            }\r\n            if (\r\n                this.getTile(this.xtile+this.length, this.ytile) === Consts.OBJECT_WALL ||\r\n                spriteTypeAtRightCorner === Consts.OBJECT_METAL ||\r\n                spriteTypeAtRightCorner === Consts.OBJECT_JAR\r\n            ) {\r\n                this.ctx.drawImage(\r\n                    this.engine.resources.get('frost'),\r\n                    (this.xtile+this.length)*this.width-7,\r\n                    this.ytile*this.height\r\n                );\r\n            }\r\n        }\r\n\r\n        this.ctx.restore();\r\n    }\r\n\r\n    glide() {\r\n        this.counter += 4;\r\n        if (this.counter <= Consts.TILE_WIDTH) {\r\n            this.x += 4 * this.dirrection;\r\n        } else {\r\n            this.push();\r\n        }\r\n    }\r\n\r\n    doDown() {\r\n        this.counter += 4;\r\n        if (this.counter <= Consts.TILE_WIDTH) {\r\n            this.y += 4;\r\n        } else {\r\n            if (!this.gravity()) {\r\n                this.setState(Consts.MOVE_STAND, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    push(dir) {\r\n        this.dirrection = (typeof dir === 'undefined') ? this.dirrection : dir;\r\n        if (!this.collision() && !this.gravity()) {\r\n            this.setState(Consts.MOVE_ICE_MOVING, true);\r\n        } else {\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    checkUnfreeze() {\r\n        const spriteTypeAtLeftCorner = this.engine.spriteTypeAt(this.xtile-1, this.ytile);\r\n        const spriteTypeAtRightCorner = this.engine.spriteTypeAt(this.xtile+this.length, this.ytile);\r\n        if (\r\n            this.getTile(this.xtile-1, this.ytile) !== Consts.OBJECT_WALL &&\r\n            this.getTile(this.xtile+this.length, this.ytile) !== Consts.OBJECT_WALL &&\r\n            spriteTypeAtLeftCorner !== Consts.OBJECT_METAL &&\r\n            spriteTypeAtLeftCorner !== Consts.OBJECT_JAR &&\r\n            spriteTypeAtRightCorner !== Consts.OBJECT_METAL &&\r\n            spriteTypeAtRightCorner !== Consts.OBJECT_JAR\r\n        ) {\r\n            this.frozen = false;\r\n        }\r\n    }\r\n\r\n    checkFreeze() {\r\n        const spriteTypeAtLeftCorner = this.engine.spriteTypeAt(this.xtile-1, this.ytile);\r\n        const spriteTypeAtRightCorner = this.engine.spriteTypeAt(this.xtile+this.length, this.ytile);\r\n        if (\r\n            (this.getTile(this.xtile-1, this.ytile) === Consts.OBJECT_WALL) ||\r\n            (this.getTile(this.xtile+this.length, this.ytile) === Consts.OBJECT_WALL) ||\r\n            (spriteTypeAtLeftCorner === Consts.OBJECT_METAL) ||\r\n            (spriteTypeAtLeftCorner === Consts.OBJECT_JAR) ||\r\n            (spriteTypeAtRightCorner === Consts.OBJECT_METAL) ||\r\n            (spriteTypeAtRightCorner === Consts.OBJECT_JAR)\r\n        ) {\r\n            this.frozen = true;\r\n        } else {\r\n            this.frozen = false;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Keyboard press engine\r\n */\r\nexport class Keyboard {\r\n    constructor() {\r\n        this.up = false;\r\n        this.down = false;\r\n        this.left = false;\r\n        this.right = false;\r\n        this.action = false;\r\n        this.keydown = this.keydown_.bind(this);\r\n        this.keyup = this.keyup_.bind(this);\r\n        this.intro = true;\r\n\r\n        window.addEventListener('keydown', this.keydown, false);\r\n        window.addEventListener('keyup', this.keyup, false);\r\n        document.getElementById('canvas').addEventListener('click', () => {\r\n            if (this.intro) {\r\n                this.enter = true;\r\n            }\r\n            this.intro = false;\r\n        });\r\n        document.getElementById('btn_action').addEventListener('pointerdown', () => this.down = true);\r\n        document.getElementById('btn_action').addEventListener('pointerup', () => this.down = false);\r\n        document.getElementById('btn_left').addEventListener('pointerdown', () => this.left = true);\r\n        document.getElementById('btn_left').addEventListener('pointerup', () => this.left = false);\r\n        document.getElementById('btn_right').addEventListener('pointerdown', () => this.right = true);\r\n        document.getElementById('btn_right').addEventListener('pointerup', () => this.right = false);\r\n        document.getElementById('btn_select').addEventListener('pointerup', () => this.enter = true);\r\n    }\r\n\r\n\r\n    keydown_(e) {\r\n        switch (e.keyCode) {\r\n            case 37: // Left\r\n                this.left = true;\r\n                break;\r\n            case 38: // Up\r\n                this.up = true;\r\n                break;\r\n            case 39: // Right\r\n                this.right = true;\r\n                break;\r\n            case 40: // Down\r\n            case 32: // Space\r\n                this.action = true;\r\n                this.down = true;\r\n                break;\r\n            case 13: //Enter\r\n                this.enter = false;\r\n                break;\r\n        }\r\n    }\r\n\r\n    keyup_(e) {\r\n        switch (e.keyCode) {\r\n            case 37: // Left\r\n                this.left = false;\r\n                break;\r\n            case 38: // Up\r\n                this.up = false;\r\n                break;\r\n            case 39: // Right\r\n                this.right = false;\r\n                break;\r\n            case 40: // Down\r\n            case 32: // Space\r\n                this.action = false;\r\n                this.down = false;\r\n                break;\r\n            case 13: //Enter\r\n                this.enter = true;\r\n                break;\r\n        }\r\n    }\r\n}\r\n","export const levels = [\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":0,\"sprites\":[{\"id\":7,\"x\":11,\"y\":4,\"v\":1},{\"id\":3,\"x\":5,\"y\":9,\"v\":1},{\"id\":3,\"x\":5,\"y\":8,\"v\":1},{\"id\":3,\"x\":5,\"y\":7,\"v\":1},{\"id\":3,\"x\":5,\"y\":6,\"v\":1},{\"id\":6,\"x\":6,\"y\":4,\"v\":1},{\"id\":3,\"x\":8,\"y\":4,\"v\":1},{\"id\":6,\"x\":7,\"y\":9,\"v\":1},{\"id\":6,\"x\":7,\"y\":8,\"v\":1},{\"id\":6,\"x\":7,\"y\":7,\"v\":1},{\"id\":6,\"x\":9,\"y\":10,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1],[1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":1,\"sprites\":[{\"id\":7,\"x\":3,\"y\":7,\"v\":1},{\"id\":6,\"x\":6,\"y\":7,\"v\":1},{\"id\":3,\"x\":4,\"y\":7,\"v\":1},{\"id\":3,\"x\":10,\"y\":5,\"v\":4},{\"id\":6,\"x\":12,\"y\":8,\"v\":1},{\"id\":6,\"x\":12,\"y\":7,\"v\":1},{\"id\":6,\"x\":12,\"y\":6,\"v\":1},{\"id\":6,\"x\":13,\"y\":8,\"v\":1},{\"id\":3,\"x\":11,\"y\":8,\"v\":1},{\"id\":3,\"x\":11,\"y\":7,\"v\":1},{\"id\":3,\"x\":11,\"y\":6,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1],[1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1],[1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,1,1,1,1,1,0,0,0,0,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":2,\"sprites\":[{\"id\":7,\"x\":14,\"y\":6,\"v\":1},{\"id\":6,\"x\":10,\"y\":9,\"v\":1},{\"id\":3,\"x\":5,\"y\":4,\"v\":1},{\"id\":6,\"x\":9,\"y\":6,\"v\":1},{\"id\":6,\"x\":9,\"y\":5,\"v\":1},{\"id\":3,\"x\":11,\"y\":6,\"v\":1},{\"id\":3,\"x\":11,\"y\":5,\"v\":1},{\"id\":3,\"x\":8,\"y\":6,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":0,\"sprites\":[{\"id\":7,\"x\":8,\"y\":9,\"v\":1},{\"id\":6,\"x\":12,\"y\":8,\"v\":1},{\"id\":6,\"x\":13,\"y\":7,\"v\":1},{\"id\":6,\"x\":11,\"y\":9,\"v\":1},{\"id\":3,\"x\":6,\"y\":8,\"v\":5},{\"id\":3,\"x\":10,\"y\":9,\"v\":1},{\"id\":3,\"x\":10,\"y\":7,\"v\":3},{\"id\":3,\"x\":12,\"y\":6,\"v\":2},{\"id\":3,\"x\":6,\"y\":9,\"v\":1},{\"id\":3,\"x\":4,\"y\":7,\"v\":3},{\"id\":3,\"x\":3,\"y\":6,\"v\":2},{\"id\":6,\"x\":5,\"y\":9,\"v\":1},{\"id\":6,\"x\":4,\"y\":8,\"v\":1},{\"id\":6,\"x\":3,\"y\":7,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,0,1,1,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,0,1,1,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1],[1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1],[1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":6,\"sprites\":[{\"id\":7,\"x\":11,\"y\":8,\"v\":1},{\"id\":3,\"x\":10,\"y\":10,\"v\":3},{\"id\":3,\"x\":10,\"y\":9,\"v\":3},{\"id\":3,\"x\":7,\"y\":7,\"v\":1},{\"id\":3,\"x\":3,\"y\":5,\"v\":1},{\"id\":3,\"x\":9,\"y\":7,\"v\":1},{\"id\":6,\"x\":3,\"y\":10,\"v\":1},{\"id\":3,\"x\":3,\"y\":4,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1],[1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":5,\"sprites\":[{\"id\":7,\"x\":14,\"y\":3,\"v\":1},{\"id\":3,\"x\":14,\"y\":4,\"v\":1},{\"id\":3,\"x\":3,\"y\":4,\"v\":1},{\"id\":3,\"x\":6,\"y\":6,\"v\":1},{\"id\":3,\"x\":8,\"y\":6,\"v\":1},{\"id\":3,\"x\":10,\"y\":6,\"v\":1},{\"id\":3,\"x\":1,\"y\":8,\"v\":12},{\"id\":6,\"x\":2,\"y\":10,\"v\":1},{\"id\":6,\"x\":3,\"y\":10,\"v\":1},{\"id\":6,\"x\":5,\"y\":10,\"v\":1},{\"id\":6,\"x\":4,\"y\":10,\"v\":1},{\"id\":6,\"x\":6,\"y\":10,\"v\":1},{\"id\":6,\"x\":7,\"y\":10,\"v\":1},{\"id\":6,\"x\":8,\"y\":10,\"v\":1},{\"id\":6,\"x\":9,\"y\":10,\"v\":1},{\"id\":6,\"x\":11,\"y\":10,\"v\":1},{\"id\":6,\"x\":12,\"y\":10,\"v\":1},{\"id\":6,\"x\":10,\"y\":10,\"v\":1},{\"id\":6,\"x\":2,\"y\":7,\"v\":1},{\"id\":3,\"x\":2,\"y\":5,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":1,\"sprites\":[{\"id\":7,\"x\":12,\"y\":4,\"v\":1},{\"id\":6,\"x\":8,\"y\":11,\"v\":1},{\"id\":6,\"x\":8,\"y\":10,\"v\":1},{\"id\":6,\"x\":9,\"y\":11,\"v\":1},{\"id\":6,\"x\":10,\"y\":11,\"v\":1},{\"id\":3,\"x\":8,\"y\":5,\"v\":5},{\"id\":3,\"x\":10,\"y\":4,\"v\":1},{\"id\":3,\"x\":6,\"y\":6,\"v\":1},{\"id\":6,\"x\":6,\"y\":5,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":1,\"sprites\":[{\"id\":7,\"x\":8,\"y\":6,\"v\":1},{\"id\":6,\"x\":5,\"y\":10,\"v\":1},{\"id\":6,\"x\":6,\"y\":10,\"v\":1},{\"id\":6,\"x\":7,\"y\":10,\"v\":1},{\"id\":6,\"x\":8,\"y\":10,\"v\":1},{\"id\":6,\"x\":9,\"y\":10,\"v\":1},{\"id\":6,\"x\":10,\"y\":10,\"v\":1},{\"id\":3,\"x\":11,\"y\":10,\"v\":2},{\"id\":3,\"x\":5,\"y\":9,\"v\":7},{\"id\":6,\"x\":5,\"y\":8,\"v\":1},{\"id\":3,\"x\":11,\"y\":6,\"v\":1},{\"id\":6,\"x\":11,\"y\":5,\"v\":1},{\"id\":3,\"x\":6,\"y\":5,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1],[1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1],[1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1],[1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1],[1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1],[1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1],[1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":6,\"sprites\":[{\"id\":7,\"x\":5,\"y\":4,\"v\":1},{\"id\":6,\"x\":5,\"y\":8,\"v\":1},{\"id\":3,\"x\":8,\"y\":5,\"v\":1},{\"id\":3,\"x\":8,\"y\":4,\"v\":1},{\"id\":6,\"x\":11,\"y\":8,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1],[1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1],[1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1],[1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1],[1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":10,\"sprites\":[{\"id\":7,\"x\":3,\"y\":4,\"v\":1},{\"id\":6,\"x\":2,\"y\":6,\"v\":1},{\"id\":6,\"x\":3,\"y\":7,\"v\":1},{\"id\":6,\"x\":4,\"y\":8,\"v\":1},{\"id\":6,\"x\":5,\"y\":9,\"v\":1},{\"id\":6,\"x\":6,\"y\":10,\"v\":1},{\"id\":6,\"x\":7,\"y\":10,\"v\":1},{\"id\":6,\"x\":8,\"y\":9,\"v\":1},{\"id\":6,\"x\":9,\"y\":8,\"v\":1},{\"id\":6,\"x\":10,\"y\":7,\"v\":1},{\"id\":6,\"x\":11,\"y\":6,\"v\":1},{\"id\":3,\"x\":2,\"y\":5,\"v\":10},{\"id\":3,\"x\":5,\"y\":4,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1],[1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1],[1,1,1,0,0,0,0,0,0,1,0,0,1,0,1,1,1],[1,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1],[1,1,1,1,1,0,0,0,1,1,0,0,1,0,1,1,1],[1,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":6,\"sprites\":[{\"id\":7,\"x\":3,\"y\":3,\"v\":1},{\"id\":6,\"x\":13,\"y\":10,\"v\":1},{\"id\":6,\"x\":5,\"y\":10,\"v\":1},{\"id\":6,\"x\":6,\"y\":10,\"v\":1},{\"id\":6,\"x\":7,\"y\":10,\"v\":1},{\"id\":3,\"x\":4,\"y\":4,\"v\":1},{\"id\":3,\"x\":6,\"y\":3,\"v\":2},{\"id\":3,\"x\":11,\"y\":3,\"v\":2},{\"id\":6,\"x\":9,\"y\":3,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1],[1,1,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1],[1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":7,\"sprites\":[{\"id\":7,\"x\":8,\"y\":5,\"v\":1},{\"id\":6,\"x\":6,\"y\":5,\"v\":1},{\"id\":3,\"x\":10,\"y\":5,\"v\":1},{\"id\":3,\"x\":2,\"y\":3,\"v\":2},{\"id\":3,\"x\":14,\"y\":4,\"v\":1},{\"id\":3,\"x\":14,\"y\":4,\"v\":1},{\"id\":3,\"x\":13,\"y\":3,\"v\":1},{\"id\":6,\"x\":14,\"y\":3,\"v\":1},{\"id\":6,\"x\":11,\"y\":10,\"v\":1},{\"id\":6,\"x\":5,\"y\":10,\"v\":1},{\"id\":6,\"x\":12,\"y\":9,\"v\":1},{\"id\":6,\"x\":2,\"y\":9,\"v\":1},{\"id\":6,\"x\":6,\"y\":9,\"v\":1},{\"id\":6,\"x\":7,\"y\":9,\"v\":1},{\"id\":6,\"x\":8,\"y\":9,\"v\":1},{\"id\":6,\"x\":9,\"y\":9,\"v\":1},{\"id\":6,\"x\":10,\"y\":9,\"v\":1},{\"id\":6,\"x\":13,\"y\":9,\"v\":1},{\"id\":3,\"x\":3,\"y\":9,\"v\":1},{\"id\":3,\"x\":3,\"y\":8,\"v\":11},{\"id\":6,\"x\":4,\"y\":9,\"v\":1}]},\r\n    {\r\n        map: [\r\n            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1],\r\n            [1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n            [1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1],\r\n            [1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1],\r\n            [1,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1],\r\n            [1,1,0,1,1,0,0,0,0,0,1,1,1,1,0,1,1],\r\n            [1,1,0,1,1,1,0,0,0,0,1,1,1,1,0,1,1],\r\n            [1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1],\r\n            [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],\r\n            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\r\n        ],\r\n        sprites: [\r\n            {id :7, x: 13, y: 2, v: 1},\r\n            {id :3, x: 4, y: 4, v: 8},\r\n            {id :3, x: 11, y: 3, v: 4},\r\n            {id :6, x: 3, y: 5, v: 1},\r\n            {id :6, x: 4, y: 6, v: 1},\r\n            {id :6, x: 5, y: 7, v: 1},\r\n            {id :6, x: 10, y: 6, v: 1},\r\n            {id :6, x: 11, y: 5, v: 1},\r\n            {id :6, x: 14, y: 10, v: 1},\r\n            {id :6, x: 14, y: 9, v: 1},\r\n            {id :6, x: 2, y: 10, v: 1},\r\n            {id :6, x: 9, y: 8, v: 1},\r\n            {id :6, x: 2, y: 9, v: 1},\r\n            {id :6, x: 8, y: 8, v: 1},\r\n            {id :6, x: 7, y: 8, v: 1},\r\n            {id :6, x: 6, y: 8, v: 1},\r\n            {id :6, x: 8, y: 10, v: 1},\r\n            {id :6, x: 7, y: 10, v: 1}\r\n        ],\r\n        theme: 8\r\n    },\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":6,\"sprites\":[{\"id\":7,\"x\":14,\"y\":10,\"v\":1}]},\r\n    {\"map\":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,1,1,1,1,0,0,1,0,1,1,0,0,1,1],[1,1,0,1,0,0,1,1,0,1,0,1,0,1,0,1,1],[1,1,0,1,1,0,1,1,1,1,0,1,0,1,0,1,1],[1,1,0,1,0,0,1,0,1,1,0,1,0,1,0,1,1],[1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1],[1,1,0,1,1,0,1,0,0,1,1,1,1,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"theme\":9,\"sprites\":[{\"id\":7,\"x\":10,\"y\":11,\"v\":1},{\"id\":6,\"x\":8,\"y\":1,\"v\":1},{\"id\":5,\"x\":4,\"y\":11,\"v\":1},{\"id\":6,\"x\":8,\"y\":5,\"v\":1}]}\r\n];\r\n\r\n","import { AnimSprite } from './animsprite';\r\nimport { Tile } from './tiles';\r\nimport { Consts }  from './constants';\r\n\r\nexport class Player extends AnimSprite {\r\n\r\n    constructor(engine, tx, ty) {\r\n        super(Consts.OBJECT_PLAYER, engine, 'img_dona', tx, ty, 48, 64, -10, -32, 2, 2, false);\r\n        this.speed = 2;\r\n        this.dirrection = 1;\r\n        this.state = 0; //standing top right down left\r\n        this.moving = false;\r\n        this.tileWidth = Consts.TILE_WIDTH;\r\n        this.tileHeight = Consts.TILE_WIDTH;\r\n        this.animDelay = 3;\r\n        this.counter = 0;\r\n        this.fallCounter = 0;\r\n        this.innerCounter = 0;\r\n        this.standCounter = 0;\r\n        this.intro();\r\n    }\r\n\r\n    left() {\r\n        if (!this.moving) {\r\n            //if standing then turn\r\n            if (this.dirrection !== Consts.DIR_LEFT) {\r\n                //is not under a brick\r\n                if (!Tile.isSolid(this.coorners.u)) {\r\n                    this.setAnim(Consts.ANIM_TURN_START, Consts.ANIM_TURN_END, false, Consts.ANIM_RIGHT_ROW, 4);\r\n                } else {\r\n                    this.setAnim(Consts.ANIM_CROUCH_START,Consts.ANIM_CROUCH_START, false, Consts.ANIM_LEFT_ROW, 4);\r\n                }\r\n                this.setState(Consts.MOVE_TURN, true);\r\n                this.dirrection = Consts.DIR_LEFT;\r\n            } else{\r\n                //running\r\n                if (!Tile.isSolid(this.coorners.l) && Tile.isSolid(this.coorners.d)) {\r\n                    //not under a brick\r\n                    if (!Tile.isSolid(this.coorners.u) && !Tile.isSolid(this.coorners.ul)) {\r\n                        this.setAnim(Consts.ANIM_RUN_START, Consts.ANIM_RUN_END, false, Consts.ANIM_LEFT_ROW);\r\n                    } else {\r\n                        this.setAnim(Consts.ANIM_CROUCH_START, Consts.ANIM_CROUCH_END, false, Consts.ANIM_LEFT_ROW);\r\n                    }\r\n                    this.setState(Consts.MOVE_LEFT, true);\r\n                }\r\n                //hit an ice\r\n                if (Tile.isSolid(this.coorners.d) && (this.coorners.l === Consts.OBJECT_ICE || this.coorners.l === Consts.OBJECT_METAL)) {\r\n                    this.push();\r\n                }\r\n                //climb\r\n                if (Tile.isSolid(this.coorners.l) && Tile.isSolid(this.coorners.d)  && !Tile.isSolid(this.coorners.u) && !Tile.isSolid(this.coorners.ul) && !this.moving) {\r\n                    this.setAnim(Consts.ANIM_PUSH_START,Consts.ANIM_PUSH_START,false, Consts.ANIM_LEFT_ROW);\r\n                    this.setState(Consts.MOVE_UP, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    right() {\r\n        if (!this.moving) {\r\n            if (this.dirrection !== Consts.DIR_RIGHT) {\r\n                if (!Tile.isSolid(this.coorners.u)) {\r\n                    this.setAnim(Consts.ANIM_TURN_START, Consts.ANIM_TURN_END, false, Consts.ANIM_LEFT_ROW, 4);\r\n                } else {\r\n                    this.setAnim(Consts.ANIM_CROUCH_START,Consts.ANIM_CROUCH_START, false, Consts.ANIM_RIGHT_ROW, 4);\r\n                }\r\n                this.setState(Consts.MOVE_TURN, true);\r\n                this.dirrection = Consts.DIR_RIGHT;\r\n            } else{\r\n                if (!Tile.isSolid(this.coorners.r) && Tile.isSolid(this.coorners.d)) {\r\n                    if (!Tile.isSolid(this.coorners.u) && !Tile.isSolid(this.coorners.ur)) {\r\n                        this.setAnim(Consts.ANIM_RUN_START, Consts.ANIM_RUN_END, false, Consts.ANIM_RIGHT_ROW);\r\n                    } else {\r\n                        this.setAnim(Consts.ANIM_CROUCH_START, Consts.ANIM_CROUCH_END, false, Consts.ANIM_RIGHT_ROW);\r\n                    }\r\n                    this.setState(Consts.MOVE_RIGHT, true);\r\n                }\r\n                if (Tile.isSolid(this.coorners.d) && (this.coorners.r === Consts.OBJECT_ICE || this.coorners.r === Consts.OBJECT_METAL)) {\r\n                    this.push();\r\n                }\r\n                if (Tile.isSolid(this.coorners.r) && Tile.isSolid(this.coorners.d) && !Tile.isSolid(this.coorners.u) && !Tile.isSolid(this.coorners.ur) && !this.moving) {\r\n                    this.setAnim(Consts.ANIM_PUSH_START,Consts.ANIM_PUSH_START,false, Consts.ANIM_RIGHT_ROW);\r\n                    this.setState(Consts.MOVE_UP, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    burn() {\r\n        if (this.state !== Consts.MOVE_RIP) {\r\n            this.engine.sound.playOnce('danger');\r\n            this.setState(Consts.MOVE_RIP, true);\r\n            this.setAnim(Consts.ANIM_RIP_START,Consts.ANIM_RIP_END, true, Consts.ANIM_RIGHT_ROW);\r\n        }\r\n    }\r\n\r\n    intro() {\r\n        this.setAnim(Consts.ANIM_BIG_FALL_START,Consts.ANIM_BIG_FALL_END, true, Consts.ANIM_RIGHT_ROW, 4);\r\n        this.setState(Consts.MOVE_INTRO, true);\r\n        this.y -= 32;\r\n    }\r\n\r\n    outro() {\r\n        this.setAnim(Consts.ANIM_FALL_START, Consts.ANIM_BIG_FALL_END, true, Consts.ANIM_RIGHT_ROW, 4);\r\n        this.setState(Consts.MOVE_OUTRO, true);\r\n        this.innerCounter = 0;\r\n    }\r\n\r\n    doRip() {\r\n\r\n    }\r\n\r\n    gravity() {\r\n        if (!this.moving) {\r\n            if (typeof this.coorners.d === \"undefined\") {\r\n                console.eror('undefined coorner');\r\n            }\r\n            if (!Tile.isSolid(this.coorners.d)) {\r\n                this.setState(Consts.MOVE_DOWN, true);\r\n                if (this.fallCounter >= 1) {\r\n                    this.engine.sound.playOnce(\"falling\");\r\n                }\r\n                if (this.fallCounter >= 2) {\r\n                    this.setAnim(Consts.ANIM_BIG_FALL_START, Consts.ANIM_BIG_FALL_END, true, Consts.ANIM_RIGHT_ROW);\r\n                } else {\r\n                    this.setAnim(Consts.ANIM_BIG_FALL_START, Consts.ANIM_BIG_FALL_END, true, Consts.ANIM_RIGHT_ROW);\r\n                }\r\n            } else {\r\n\r\n                this.engine.sound.stop(\"falling\");\r\n                if (this.state === Consts.MOVE_DOWN) {\r\n                    this.engine.sound.play('fall');\r\n                    if (this.fallCounter >= 2) {\r\n                        this.engine.addSparks(this.xtile, this.ytile + 1, '255, 135, 124', 5, 0.75);\r\n                        this.engine.addSparks(this.xtile, this.ytile + 1, '122, 211, 255', 10,  1);\r\n                    }\r\n                }\r\n                this.fallCounter = 0;\r\n                this.setState(Consts.MOVE_STAND, false);\r\n                if (this.coorners.d === Consts.OBJECT_JAR) {\r\n                    const jar = this.engine.spriteAt(this.xtile, this.ytile + 1);\r\n                    if (jar && jar.onFire) {\r\n                        this.burn();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ice() {\r\n        if (!this.moving) {\r\n            if (Tile.isSolid(this.coorners.d)) {\r\n                if (this.dirrection === Consts.DIR_RIGHT) {\r\n                    if (!Tile.isSolid(this.coorners.dr) && this.coorners.dr !== Consts.OBJECT_FIRE) {\r\n                        this.setAnim(Consts.ANIM_ICE_START,Consts.ANIM_ICE_END,false, Consts.ANIM_RIGHT_ROW, 4);\r\n                        this.setState(Consts.MOVE_ICE_MAKE, true);\r\n                    } else if (this.coorners.dr === Consts.OBJECT_ICE) {\r\n                        this.setAnim(Consts.ANIM_ICE_START,Consts.ANIM_ICE_END,false, Consts.ANIM_RIGHT_ROW, 4);\r\n                        this.setState(Consts.MOVE_ICE_REMOVE, true);\r\n                    } else {\r\n                        this.setAnim(Consts.ANIM_ICE_START,Consts.ANIM_ICE_END,false, Consts.ANIM_RIGHT_ROW, 4);\r\n                        this.setState(Consts.MOVE_ICE_FAIL, true);\r\n                    }\r\n                } else {\r\n                    if (!Tile.isSolid(this.coorners.dl) && (this.coorners.dl !== Consts.OBJECT_FIRE)) {\r\n                        this.setAnim(Consts.ANIM_ICE_START,Consts.ANIM_ICE_END,false, Consts.ANIM_LEFT_ROW, 4);\r\n                        this.setState(Consts.MOVE_ICE_MAKE, true);\r\n                    } else if (this.coorners.dl === Consts.OBJECT_ICE) {\r\n                        this.setAnim(Consts.ANIM_ICE_START,Consts.ANIM_ICE_END,false, Consts.ANIM_LEFT_ROW, 4);\r\n                        this.setState(Consts.MOVE_ICE_REMOVE, true);\r\n                    } else {\r\n                        this.setAnim(Consts.ANIM_ICE_START,Consts.ANIM_ICE_END,false, Consts.ANIM_LEFT_ROW, 4);\r\n                        this.setState(Consts.MOVE_ICE_FAIL, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    jump() {\r\n        if (!this.moving) {\r\n            if (this.dirrection === Consts.DIR_RIGHT) {\r\n                if (Tile.isSolid(this.coorners.r) && !Tile.isSolid(this.coorners.ur) && !Tile.isSolid(this.coorners.u)) {\r\n                    this.setAnim(Consts.ANIM_PUSH_START,Consts.ANIM_PUSH_START,false, Consts.ANIM_RIGHT_ROW);\r\n                    this.setState(Consts.MOVE_UP, true);\r\n                }\r\n            } else {\r\n                if (Tile.isSolid(this.coorners.l) && !Tile.isSolid(this.coorners.ul) && !Tile.isSolid(this.coorners.u)) {\r\n                    this.setAnim(Consts.ANIM_PUSH_START,Consts.ANIM_PUSH_START,false, Consts.ANIM_LEFT_ROW);\r\n                    this.setState(Consts.MOVE_UP, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    doRun() {\r\n        this.counter++;\r\n        if (this.counter <= Consts.ANIM_FRAME_COUNT) {\r\n            this.x += this.speed * this.dirrection;\r\n        } else {\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    doTurn() {\r\n        this.counter++;\r\n        if (this.counter >= Consts.ANIM_FRAME_COUNT) {\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    doOutro() {\r\n        this.counter += 1;\r\n        if (this.counter % 10 === 0) {\r\n            this.innerCounter += 1;\r\n            if (this.innerCounter === 1) {\r\n                this.engine.addSparks(this.xtile, this.ytile, '124, 238, 66', 20,  0.5);\r\n            }\r\n            if (this.innerCounter === 3) {\r\n                this.engine.addSparks(this.xtile, this.ytile, '255, 135, 124', 15, 1);\r\n            }\r\n            if (this.innerCounter === 5) {\r\n                this.engine.addSparks(this.xtile, this.ytile, '122, 211, 255', 10,  1.5);\r\n            }\r\n            if (this.innerCounter % 2 === 0 && this.innerCounter < 6) {\r\n                this.engine.sound.play('climb');\r\n            }\r\n        }\r\n        if (this.innerCounter % 2 === 1) {\r\n            this.y += 1;\r\n        } else {\r\n            this.y -= 1;\r\n        }\r\n        if (this.innerCounter >= 6) {\r\n            this.engine.sound.play('state-leave');\r\n            this.setState(Consts.MOVE_STAND, false);\r\n            this.engine.nextLevel();\r\n        }\r\n    }\r\n\r\n    doIntro() {\r\n        this.counter += 1;\r\n        if (this.counter === 4) {\r\n            this.engine.addSparks(this.xtile, this.ytile, '124, 238, 66', 20,  0.5);\r\n            this.engine.addSparks(this.xtile, this.ytile, '255, 135, 124', 15, 1);\r\n            this.engine.addSparks(this.xtile, this.ytile, '122, 211, 255', 10,  1.5);\r\n            this.engine.sound.play('stage-enter');\r\n        }\r\n        if (this.counter <= 16) {\r\n            this.y += 2;\r\n        } else {\r\n            this.engine.sound.stop(\"falling\");\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    doGravity() {\r\n        this.counter += 1;\r\n        if (this.counter <= Consts.ANIM_FRAME_COUNT) {\r\n            this.y += this.speed;\r\n        } else {\r\n            this.moving = false;\r\n            this.gravity();\r\n            this.fallCounter++;\r\n        }\r\n    }\r\n\r\n    doStand() {\r\n        if (!Tile.isSolid(this.coorners.u)) {\r\n            if (this.standCounter++ > 500) {\r\n                this.setAnim(Consts.ANIM_SLEEP_START,Consts.ANIM_SLEEP_END,true, this.dirrection !== 1 ? Consts.ANIM_LEFT_ROW : Consts.ANIM_RIGHT_ROW, 48, true);\r\n            } else {\r\n                this.setAnim(Consts.ANIM_STAND_START,Consts.ANIM_STAND_END,true, this.dirrection !== 1 ? Consts.ANIM_LEFT_ROW : Consts.ANIM_RIGHT_ROW, 8, true);\r\n            }\r\n        } else {\r\n            this.setAnim(Consts.ANIM_CROUCH_START,Consts.ANIM_CROUCH_START, false, this.dirrection !== 1 ? Consts.ANIM_LEFT_ROW : Consts.ANIM_RIGHT_ROW, 8, true);\r\n        }\r\n    }\r\n\r\n    doUp() {\r\n        this.counter += 1;\r\n        if (this.counter <= 18) {\r\n            switch (this.counter) {\r\n                case 3:\r\n                    this.engine.sound.play('climb');\r\n                    this.engine.addSparks(this.xtile, this.ytile, '124, 238, 66', 10,  0.75);\r\n                    this.engine.addSparks(this.xtile, this.ytile, '255, 135, 124', 5, 1.25);\r\n                    this.setAnim(Consts.ANIM_PUSH_END, Consts.ANIM_PUSH_END, false, this.dirrection === Consts.DIR_RIGHT ? Consts.ANIM_RIGHT_ROW : Consts.ANIM_LEFT_ROW);\r\n                    break;\r\n                case 6:\r\n                    this.setAnim(Consts.ANIM_JUMP_START, Consts.ANIM_JUMP_START, false, this.dirrection === Consts.DIR_RIGHT ? Consts.ANIM_RIGHT_ROW : Consts.ANIM_LEFT_ROW);\r\n                    this.x += 8 * this.dirrection;\r\n                    this.y -= 8;\r\n                    break;\r\n                case 9:\r\n                    this.setAnim(Consts.ANIM_JUMP_END, Consts.ANIM_JUMP_END, false, this.dirrection === Consts.DIR_RIGHT ? Consts.ANIM_RIGHT_ROW : Consts.ANIM_LEFT_ROW);\r\n                    this.x += 8 * this.dirrection;\r\n                    this.y -= 8;\r\n                    break;\r\n                case 12:\r\n                    this.setAnim(2, 2, false, this.dirrection === Consts.DIR_RIGHT ? Consts.ANIM_RIGHT_ROW : Consts.ANIM_LEFT_ROW);\r\n                    this.x += 8 * this.dirrection;\r\n                    this.y -= 8;\r\n                    break;\r\n                case 18:\r\n                    this.setAnim(Consts.ANIM_STAND, Consts.ANIM_STAND, false, this.dirrection === Consts.DIR_RIGHT ? Consts.ANIM_RIGHT_ROW : Consts.ANIM_LEFT_ROW);\r\n                    this.x += 8 * this.dirrection;\r\n                    this.y -= 8;\r\n                break;\r\n            }\r\n        } else {\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    makeIce() {\r\n        this.engine.sound.play('new-ice');\r\n        this.engine.addIceBlock(this.xtile + this.dirrection, this.ytile+1);\r\n        this.engine.addSparks(this.xtile + this.dirrection, this.ytile + 1);\r\n        this.engine.addSparks(this.xtile + this.dirrection, this.ytile + 1, '124, 214, 255', 5);\r\n    }\r\n\r\n    removeIceBlock() {\r\n        this.engine.sound.play('ice-remove');\r\n        this.engine.removeIceBlock(this.xtile + this.dirrection, this.ytile+1);\r\n        this.engine.addSparks(this.xtile + this.dirrection, this.ytile + 1);\r\n        this.engine.addSparks(this.xtile + this.dirrection, this.ytile + 1, '124, 214, 255', 5);\r\n    }\r\n\r\n    push() {\r\n        let ice =  this.engine.iceAt(this.xtile+this.dirrection, this.ytile);\r\n        if (ice && ice.canGlide(this.dirrection)) {\r\n            this.engine.addSparks(this.xtile + this.dirrection, this.ytile, '255, 255, 255', 3);\r\n            this.engine.addSparks(this.xtile + this.dirrection, this.ytile, '124, 214, 255', 3, 1.5);\r\n            this.setAnim(Consts.ANIM_PUSH_START, Consts.ANIM_PUSH_END, false, this.dirrection === Consts.DIR_RIGHT ? Consts.ANIM_RIGHT_ROW : Consts.ANIM_LEFT_ROW, 3);\r\n            this.setState(Consts.MOVE_PUSH, true);\r\n        }\r\n    }\r\n\r\n    doPush() {\r\n        this.counter += 2;\r\n        if (this.counter <= Consts.ANIM_FRAME_COUNT) {\r\n            // fixme\r\n        } else {\r\n            let ice =  this.engine.iceAt(this.xtile+this.dirrection, this.ytile);\r\n            if (ice) {\r\n                this.engine.sound.play('ice-push');\r\n                ice.push(this.dirrection);\r\n            }\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    doIce() {\r\n        if (this.counter === 8) {\r\n            if (this.state === Consts.MOVE_ICE_MAKE) {\r\n                this.makeIce();\r\n            } else{\r\n                this.removeIceBlock();\r\n            }\r\n        }\r\n        this.counter += 1;\r\n        if (this.counter >= Consts.ANIM_FRAME_COUNT) {\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    doFailIce() {\r\n        if (this.counter === 8) {\r\n            this.engine.sound.play('ice-disabled');\r\n            this.engine.addSparks(this.xtile + this.dirrection, this.ytile + 1, '88,66,66');\r\n        }\r\n        this.counter += 1;\r\n        if (this.counter >= Consts.ANIM_FRAME_COUNT) {\r\n            this.setState(Consts.MOVE_STAND, false);\r\n        }\r\n    }\r\n\r\n    collisions() {\r\n        if (this.engine.spriteTypeAt(this.xtile, this.ytile, Consts.OBJECT_PLAYER) === Consts.OBJECT_FIRE) {\r\n            this.burn();\r\n        }\r\n    }\r\n\r\n    move () {\r\n        this.gravity();\r\n        this.collisions();\r\n        if (this.state !== Consts.MOVE_STAND) {\r\n            this.standCounter = 0;\r\n        }\r\n        if (this.state !== Consts.MOVE_DOWN) {\r\n            this.fallCounter = 0;\r\n        }\r\n        switch (this.state) {\r\n            case Consts.MOVE_RIGHT:\r\n                this.doRun();\r\n                break;\r\n            case Consts.MOVE_LEFT:\r\n                this.doRun();\r\n                break;\r\n            case Consts.MOVE_DOWN:\r\n                this.doGravity();\r\n                break;\r\n            case Consts.MOVE_UP:\r\n                this.doUp();\r\n                break;\r\n            case Consts.MOVE_TURN:\r\n                this.doTurn();\r\n                break;\r\n            case Consts.MOVE_ICE_MAKE:\r\n            case Consts.MOVE_ICE_REMOVE:\r\n                this.doIce();\r\n                break;\r\n            case Consts.MOVE_ICE_FAIL:\r\n                this.doFailIce();\r\n                break;\r\n            case Consts.MOVE_STAND:\r\n                this.doStand();\r\n                break;\r\n            case Consts.MOVE_PUSH:\r\n                this.doPush();\r\n                break;\r\n            case Consts.MOVE_RIP:\r\n                this.doRip();\r\n                break;\r\n            case Consts.MOVE_OUTRO:\r\n                this.doOutro();\r\n                break;\r\n            case Consts.MOVE_INTRO:\r\n                this.doIntro();\r\n                break;\r\n        }\r\n    }\r\n}","export class Resources {\r\n\r\n    constructor() {\r\n        this.resources = {};\r\n    }\r\n\r\n    add(name, resource) {\r\n        this.resources[name] = resource;\r\n    }\r\n\r\n    get(name) {\r\n        return this.resources[name];\r\n    }\r\n\r\n}\r\n","import { Consts }  from './constants';\r\nimport { TileMap } from './tilemap';\r\nimport { Player } from './player';\r\nimport { Ice } from './ice';\r\nimport { Fire } from './fire';\r\nimport { levels } from './levels';\r\n\r\nexport class Scene {\r\n\r\n    constructor(engine) {\r\n        this.engine = engine;\r\n    }\r\n\r\n    save() {\r\n        let data = {};\r\n        data.map = this.engine.map.map;\r\n        data.theme = this.engine.map.theme;\r\n        data.sprites = [];\r\n        for (const sprite of this.engine.sprites) {\r\n            let value = (typeof sprite.length === \"undefined\") ? 1 : sprite.length;\r\n            value = sprite.id === Consts.OBJECT_JAR ? sprite.onFire : value;\r\n            data.sprites.push({\r\n                \"id\": sprite.id,\r\n                \"x\": sprite.xtile,\r\n                \"y\": sprite.ytile,\r\n                \"v\": value\r\n            });\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    load(index) {\r\n        if (typeof levels[index] === 'undefined') {\r\n            index = 0;\r\n        }\r\n        this.engine.level = index;\r\n        const level = levels[index];\r\n        this.engine.sprites = [];\r\n        this.engine.map = new TileMap(this.engine, level.map, level.theme);\r\n        for (const sprite of level.sprites) {\r\n            switch(sprite.id) {\r\n                case Consts.OBJECT_PLAYER:\r\n                    this.engine.player = new Player(this.engine, sprite.x, sprite.y);\r\n                    this.engine.addSprite(this.engine.player);\r\n                    break;\r\n                case Consts.OBJECT_ICE:\r\n                    sprite.v = typeof sprite.v === \"undefined\" ? 1 : sprite.v;\r\n                    this.engine.addSprite(new Ice(this.engine, sprite.x, sprite.y, parseInt(sprite.v)));\r\n                    break;\r\n                case Consts.OBJECT_METAL:\r\n                    this.engine.addSprite(new Metal(this.engine, sprite.x, sprite.y, 1));\r\n                    break;\r\n                case Consts.OBJECT_FIRE:\r\n                    this.engine.addSprite(new Fire(this.engine, sprite.x, sprite.y));\r\n                    break;\r\n                case Consts.OBJECT_JAR:\r\n                    const jar = new Jar(this.engine, sprite.x, sprite.y);\r\n                    jar.onFire = sprite.v === \"1\" ? true : false;\r\n                    this.engine.addSprite(jar);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}","import { Sprite } from './sprite';\r\nimport { Consts }  from './constants';\r\nclass Particle {\r\n\r\n    constructor(ctx, x, y, color, intencity) {\r\n        this.color = (typeof color === 'undefined') ? '255,255,255' : color;\r\n        this.r = 3;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.vx = (Math.random() * 4 - 2) * intencity;\r\n        this.vy = (Math.random() * 6 - 4) * intencity;\r\n        this.speed = 0.15;\r\n        this.life = 255;\r\n        this.ctx = ctx;\r\n    }\r\n\r\n    draw() {\r\n        let opacity = this.life / 255;\r\n        this.ctx.beginPath();\r\n        this.ctx.fillStyle = 'rgba(' + this.color+ ',' + opacity + ')';\r\n        this.ctx.arc(this.x, this.y, this.r, 0, Math.PI*2, true);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n    }\r\n\r\n    move() {\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n        this.vy += this.speed;\r\n        this.life -= 5;\r\n    }\r\n}\r\n\r\nexport class Sparks extends Sprite {\r\n\r\n    constructor (engine, tx, ty, color, length, intencity) {\r\n        super(null, engine, tx, ty, 32, 32);\r\n        this.color = (typeof color === 'undefined') ? '255,255,255' : color;\r\n        this.length = (typeof length === 'undefined') ? 10 : length;\r\n        this.intencity = (typeof intencity === 'undefined') ? 1 : intencity;\r\n        this.particles = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            this.particles[i] = new Particle(this.engine.ctx, tx*Consts.TILE_WIDTH+16, ty*Consts.TILE_WIDTH+16, this.color, this.intencity);\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.engine.ctx.save();\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            this.particles[i].draw();\r\n        }\r\n        this.engine.ctx.restore();\r\n    }\r\n\r\n    engineMove() {\r\n        this.move();\r\n    }\r\n\r\n    move() {\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            this.particles[i].move();\r\n            if (this.particles[i].life < 0) {\r\n                this.particles.splice(i,1);\r\n            }\r\n        }\r\n        if (!this.particles.length) {\r\n            this.engine.removeSfx(this);\r\n        }\r\n    }\r\n}\r\n","export class Sound {\r\n\tconstructor() {\r\n\t\tthis.musicOn = true;\r\n\t\tthis.soundOn = true;\r\n\r\n\t\tthis.sfxVolume = 0.3;\r\n\t\tthis.sfx = {\r\n\t\t\t\"fire-off\" : document.getElementById('sfx-fire-off'),\r\n\t\t\t\"ice-push\" : document.getElementById('sfx-ice-push'),\r\n\t\t\t\"fall\" : document.getElementById('sfx-fall'),\r\n\t\t\t\"falling\" : document.getElementById('sfx-falling'),\r\n\t\t\t\"new-ice\" : document.getElementById('sfx-new-ice'),\r\n\t\t\t\"climb\" : document.getElementById('sfx-climb'),\r\n\t\t\t\"ice-collision\" : document.getElementById('sfx-ice-collision'),\r\n\t\t\t\"stage-enter\" : document.getElementById('sfx-stage-enter'),\r\n\t\t\t\"danger\" : document.getElementById('sfx-danger'),\r\n\t\t\t\"ice-remove\" : document.getElementById('sfx-ice-remove'),\r\n\t\t\t\"state-leave\" : document.getElementById('sfx-state-leave'),\r\n\t\t\t\"ice-disabled\" : document.getElementById('sfx-disabled')\r\n\t\t};\r\n\t}\r\n\r\n\tplay(sfx) {\r\n\t\tif (!this.soundOn) return;\r\n\t\tthis.sfx[sfx].volume = this.sfxVolume;\r\n\t\tthis.sfx[sfx].currentTime = 0;\r\n\t\tthis.sfx[sfx].play().catch(()=>{});\r\n\t}\r\n\r\n\tplayOnce(sfx) {\r\n\t\tif (!this.sfx[sfx].paused) return;\r\n\t\tif (!this.soundOn) return;\r\n\t\tthis.sfx[sfx].volume = this.sfxVolume;\r\n\t\tthis.sfx[sfx].currentTime = 0;\r\n\t\tthis.sfx[sfx].play().catch(()=>{});\r\n\t}\r\n\r\n\tstop(sfx) {\r\n\t\tthis.sfx[sfx].pause();\r\n\t\tthis.sfx[sfx].currentTime = 0;\r\n\t}\r\n\r\n\tsoundrack() {\r\n\t\tif (!this.musicOn) return;\r\n\t\tthis.music = document.getElementById('sfx-music-sparks');\r\n\t\tthis.music.muted = false;\r\n\t\tthis.music.volume = 0.2;\r\n\t\tthis.music.loop = true;\r\n\t\tthis.music.play().catch(()=>{});\r\n\t}\r\n}","import { Consts }  from './constants';\r\nimport { Position } from './struct';\r\n\r\nexport class Sprite {\r\n    /**\r\n     * Base class of the sprite\r\n     * @param {object} engine   Engine Engine\r\n     * @param {number} tx     Position tile x in the map\r\n     * @param {number} ty     Position tile y in the map\r\n     * @param {number} width  Width of the sprite\r\n     * @param {number} height Height of the sprite\r\n     */\r\n    constructor(id, engine, tx, ty, width, height) {\r\n        this.engine = engine;\r\n        this.id = id;\r\n        this.ctx = engine.ctx;\r\n        this.coorners = new Position();\r\n        this.solid = true;\r\n        this.moving = false;\r\n        this.counter = false;\r\n        this.speed = 4;\r\n        this.state = Consts.MOVE_STAND;\r\n        this.height = height;\r\n        this.width = width;\r\n        this.dirrection = 0;\r\n        this.xtile = tx;\r\n        this.ytile = ty;\r\n        this.x = this.xtile * Consts.TILE_WIDTH;\r\n        this.y = this.ytile * Consts.TILE_WIDTH;\r\n    }\r\n    /**\r\n     * Sets sprite states\r\n     * @param {number} state  Constant of the state\r\n     * @param {boolean} moving True if sprite is moving\r\n     */\r\n    setState(state, moving) {\r\n        this.moving = (typeof moving === 'undefined') ? false : moving;\r\n        this.state = state;\r\n        this.counter = 0;\r\n    }\r\n\r\n    getTile(tx, ty) {\r\n        return this.engine.map.getTile(tx, ty);\r\n    }\r\n\r\n    isSpriteAt (tx, ty) {\r\n        return this.xtile === tx && this.ytile === ty;\r\n    }\r\n\r\n    spriteTypeAt(tx, ty) {\r\n        return this.engine.spriteTypeAt(tx, ty);\r\n    }\r\n\r\n    move () {}\r\n\r\n    engineMove() {\r\n        this.coorners.u = this.spriteTypeAt(this.xtile, this.ytile-1);\r\n        this.coorners.d = this.spriteTypeAt(this.xtile, this.ytile+1);\r\n        this.coorners.l = this.spriteTypeAt(this.xtile-1, this.ytile);\r\n        this.coorners.r = this.spriteTypeAt(this.xtile+1, this.ytile);\r\n        this.coorners.ul = this.spriteTypeAt(this.xtile-1, this.ytile-1);\r\n        this.coorners.ur = this.spriteTypeAt(this.xtile+1, this.ytile-1);\r\n        this.coorners.dl = this.spriteTypeAt(this.xtile-1, this.ytile+1);\r\n        this.coorners.dr = this.spriteTypeAt(this.xtile+1, this.ytile+1);\r\n\r\n        this.move();\r\n\r\n        this.xtile = Math.floor(this.x / Consts.TILE_WIDTH);\r\n        this.ytile = Math.floor(this.y / Consts.TILE_WIDTH);\r\n    }\r\n}\r\n","/**\r\n* Stores position of the corners and vertices\r\n*/\r\nexport class Position {\r\n    constructor() {\r\n        this.u = 0;\r\n        this.d = 0;\r\n        this.l = 0;\r\n        this.r = 0;\r\n        this.ul = 0;\r\n        this.ur = 0;\r\n        this.dl = 0;\r\n        this.dr = 0;\r\n    }\r\n}\r\n\r\nexport class Coor {\r\n    constructor (tx, ty) {\r\n        this.xtile = tx;\r\n        this.ytile = ty;\r\n    }\r\n}\r\n\r\nfunction rand(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import { Consts }  from './constants';\r\n\r\nexport class TileMap {\r\n    /**\r\n     * Tilemap class\r\n     * @param {object} engine Engine\r\n     * @param {object} map  Matrix of the map\r\n     */\r\n\r\n    constructor(engine, map, theme) {\r\n        this.ctx = engine.ctx;\r\n        this.engine = engine;\r\n        this.map = map;\r\n        this.theme = theme;\r\n        this.tileWidth = Consts.TileWidth;\r\n        this.tileHeight = Consts.TileWidth;\r\n        this.height = this.map.length - 1;\r\n        this.width = this.map[0].length - 1;\r\n        this.tilesImage = this.engine.resources.get('tilemap');\r\n    }\r\n    /**\r\n     * Returns the content of the tile inside the matrix\r\n     * if position out of bounds returns Consts.OBJECT_OUT\r\n     * @param  {number} y position\r\n     * @param  {number} x position\r\n     * @return {number}   Content of the tile\r\n     */\r\n    getTile(x, y) {\r\n        if (x < 0 || y < 0 || x > this.width || y > this.height) {\r\n            return Consts.OBJECT_OUT;\r\n        }\r\n        return this.map[y][x];\r\n\r\n    }\r\n    /**\r\n     * Draws the map\r\n     * @return {none}\r\n     */\r\n    draw() {\r\n\r\n        this.ctx.save();\r\n        for (let i = 0; i <= this.width; ++i) {\r\n            for (let j = 0; j <= this.height; ++j) {\r\n                let tileType = Consts.TILE_BACKGROUND;\r\n                if (this.map[j][i] === 1) {\r\n                    if (!this.getTile(i-1, j) && !this.getTile(i+1, j)) {\r\n                        tileType = Consts.TILE_BOTH;\r\n                    } else if (!this.getTile(i-1, j)) {\r\n                        tileType = Consts.TILE_LEFT;\r\n                    } else if (!this.getTile(i+1, j)) {\r\n                        tileType = Consts.TILE_RIGHT;\r\n                    } else {\r\n                        tileType = Consts.TILE_MIDDLE;\r\n                    }\r\n                }\r\n                this.ctx.drawImage(\r\n                    this.tilesImage,\r\n                    tileType,\r\n                    this.theme * this.tileHeight,\r\n                    this.tileWidth,\r\n                    this.tileHeight,\r\n                    i * this.tileWidth,\r\n                    j * this.tileHeight,\r\n                    this.tileWidth,\r\n                    this.tileHeight\r\n                );\r\n            }\r\n        }\r\n        this.ctx.restore();\r\n    }\r\n\r\n    move() {}\r\n\r\n    engineMove() {}\r\n}\r\n","import { Consts }  from './constants';\r\n\r\nexport const Tile = {\r\n   tiles: {\r\n        [Consts.OBJECT_BACKGROUND]: {\r\n            solid: false\r\n        },\r\n        [Consts.OBJECT_OUT]: {\r\n            solid: true\r\n        },\r\n        [Consts.OBJECT_PLAYER]: {\r\n            solid: true\r\n        },\r\n        [Consts.OBJECT_ICE]: {\r\n            solid: true\r\n        },\r\n        [Consts.OBJECT_METAL]: {\r\n            solid: true\r\n        },\r\n        [Consts.OBJECT_WALL]: {\r\n            solid: true\r\n        },\r\n        [Consts.OBJECT_FIRE]: {\r\n            solid: false\r\n        },\r\n        [Consts.OBJECT_JAR]: {\r\n            solid: true\r\n        }\r\n    },\r\n\r\n    isSolid: function(id) {\r\n        if (typeof this.tiles[id] === 'undefined') {\r\n            throw new Error('UNDEFINED ON isSolid');\r\n        } else {\r\n            return this.tiles[id].solid;\r\n        }\r\n    }\r\n};\r\n"],"sourceRoot":""}